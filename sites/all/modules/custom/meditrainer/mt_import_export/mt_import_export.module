<?php

module_load_include('inc', 'mt_import_export', 'mt_import_export_admin_menu');
module_load_include('inc', 'mt_import_export','mt_import_export_forms');
module_load_include('inc', 'mt_import_export','import_objects');

/*
 * $list = array (
    array('aaa', 'bbb', 'ccc', 'dddd'),
    array('123', '456', '789'),
    array('"aaa"', '"bbb"')
);

// Create CSV file
$csv_folder     = BASEURLHERE.'/csv';
$filename 	= "sales";
$CSVFileName    = $csv_folder.'/'.$filename.'.csv';
$FileHandle     = fopen($CSVFileName, 'w') or die("can't open file");

fclose($FileHandle);
		
$fp = fopen($CSVFileName, 'w');

foreach ($csv_fields as $fields) {
	fputcsv($fp, $fields);
}
fclose($fp);

 * 
 */
function mt_import_export_file_download($uri){
    //use build_url and get_download_url($uri) into 
    $files = file_load_multiple(array(), array('uri' => $uri));
  if (count($files)) {
    foreach ($files as $item) {
      // Since some database servers sometimes use a case-insensitive comparison
      // by default, double check that the filename is an exact match.
      if ($item->uri === $uri) {
        $file = $item;
        break;
      }
    }
  }
  if (!isset($file)) {
    return;
  }

  // File was found, and access is granted, return the header
  $headers = file_get_content_headers($file);
  return $headers;
}

function get_date_slash_timestamp(){
    return date('Ymd/Hi');
}

function get_import_export_folder_name($import_export_type){
    switch($import_export_type){
        case 'import':
            $import_folder_name = 'import'.'/';
            return $import_folder_name;
            break;
        case 'export':
            $export_folder_name = 'export'.'/'.get_date_slash_timestamp().'/';
            return $export_folder_name;
            break;
        case 'backup':
            $backup_folder_name = 'backup'.'/'.get_date_slash_timestamp().'/';
            return $backup_folder_name;
            break;
    }
}


function get_export_file_path($file_name, $export_folder_name){
    $data_folder = get_data_folderpath('mt_import_export');
    $complete_file_path = $data_folder."".$export_folder_name."".$file_name;
    return $complete_file_path;
}
    
function table_export($table_name, $fields_array = false, $condition_array = false) {
    $query = db_select($table_name, 'n');
    
    if($fields_array == false) {
        $query->fields('n');
    } else $query->fields('n', $fields_array);
    
    if ($condition_array == false){
    } else {
       foreach ($condition_array as $key=>$value) {
           $query->condition($key, $value );
       }
    }
        
    $results = $query->execute();
     
    $data_array =  $results->fetchAll(PDO::FETCH_ASSOC);
    
    return $data_array;
}

function process_data_array(&$data_array, $add_str_null = false, $str_to_int = false){
   if ($add_str_null = true){
       foreach($data_array as $row_index => $row_data){
  
         foreach ($row_data as $column_header => $value )
         if ($value === NULL){
          $data_array[$row_index][$column_header] = 'NULL';
         }
     }
   }
   return $data_array;
}

/* //original function
 */
function export_csv(&$handle, $fields = array(), $delimiter = ',', $enclosure = '"') {
    $str = '';
    $escape_char = '\\';
    foreach ($fields as $value) {
      if (strpos($value, $delimiter) !== false ||
          strpos($value, $enclosure) !== false ||
          strpos($value, "\n") !== false ||
          strpos($value, "\r") !== false ||
          strpos($value, "\t") !== false ||
          strpos($value, ' ') !== false) {
        $str2 = $enclosure;
        $escaped = 0;
        $len = strlen($value);
        for ($i=0;$i<$len;$i++) {
          if ($value[$i] == $escape_char) {
            $escaped = 1;
          } else if (!$escaped && $value[$i] == $enclosure) {
            $str2 .= $enclosure;
          } else {
            $escaped = 0;
          }
          $str2 .= $value[$i];
        }
        $str2 .= $enclosure;
        $str .= $str2.$delimiter;
      } else {
        $str .= $value.$delimiter;
      }
    }
    $str = substr($str,0,-1);
    $str .= "\n";
    return fwrite($handle, $str);
  }


  function export_to_csv(&$handle, $fields = array(), $delimiter = ',', $enclosure = '"') {
    $str = '';
    $escape_char = '\\';
    
     //add first row column header($key) array to the beginning of the data array
      array_unshift($fields, array_keys($fields[0]));    
    
    
    foreach ($fields as $key=>$value) {
      if (strpos($value, $delimiter) !== false ||
          strpos($value, $enclosure) !== false ||
          strpos($value, "\n") !== false ||
          strpos($value, "\r") !== false ||
          strpos($value, "\t") !== false ||
          strpos($value, ' ') !== false) {
        $str2 = $enclosure;
        $escaped = 0;
        $len = strlen($value);
        for ($i=0;$i<$len;$i++) {
          if ($value[$i] == $escape_char) {
            $escaped = 1;
          } else if (!$escaped && $value[$i] == $enclosure) {
            $str2 .= $enclosure;
          } else {
            $escaped = 0;
          }
          $str2 .= $value[$i];
        }
        $str2 .= $enclosure;
        $str .= $str2.$delimiter;
      } else {
        $str .= $value.$delimiter;
      }
    }
    $str = substr($str,0,-1);
    $str .= "\n";
    return fwrite($handle, $str);
  }
  
  function standard_fputcsv_export($file_handle, $data_array, $delimiter = ',', $enclosure = '"'){
    
      
    //add first row column header($key) array to the beginning of the data array
      array_unshift($data_array, array_keys($data_array[0]));
      
      foreach ($data_array as $row){
          fputcsv($file_handle, $row, $delimiter, $enclosure);
      }
      
      fclose($file_handle);
  }
  
function table_export_to_csv($table_name, $file_handle = 'browser', $query_fields_array = false, $query_condition_array = false, $delimiter = ',', $enclosure = '"'){
   $data = table_export($table_name, $query_fields_array, $query_condition_array);
   $table_data = process_data_array($data);//replace NULL with string null
   if($file_handle == 'browser'){
       browser_based_table_export_to_export($table_name, $table_data, $delimiter = ',', $enclosure = '"');
   } else standard_fputcsv_export($file_handle, $table_data, $delimiter, $enclosure );
}

function object_export_to_csv($object_name, $file_handle='browser', $query_fields_array = false, $query_condition_array = false, $delimiter = ',', $enclosure = '"'){
    switch($object_name){
	case 'mcq':
	    $mcqs = export_object_mcq();
	    $object_data = process_data_array($mcqs);
	    if($file_handle == 'browser'){
		browser_based_table_export_to_export($object_name, $object_data, $delimiter = ',', $enclosure = '"');
	    } else standard_fputcsv_export($file_handle, $object_data, $delimiter, $enclosure );
	    break;
	    case 'book':
		break;
    }
}
function process_query_result($query_result){
    
}

function browser_based_table_export_to_export($table_name, $table_data, $delimiter = ',', $enclosure = '"'){
     //add first row column header($key) array to the beginning of the data array
      array_unshift($table_data, array_keys($table_data[0]));
      
      // output headers so that the file is downloaded rather than displayed
        // header('Content-Type: text/csv; charset=utf-8');
       //  header('Content-Disposition: attachment; filename='.$table_name.'.csv');
        drupal_add_http_header('Content-type', 'application/csv; utf-8');
        drupal_add_http_header('Content-Disposition', 'attachment; filename='.$table_name.'.csv');
        

      //  drupal_add_http_header("Pragma: no-cache");
      //  drupal_add_http_header("Expires: 0");

      // create a file pointer connected to the output stream
        $output = fopen('php://output', 'w');
      
      foreach ($table_data as $row){
          fputcsv($output, $row, $delimiter, $enclosure);
      }
      fclose($output);
      
    //close the connection before it puts html code of the current page
      die();
  }
?>