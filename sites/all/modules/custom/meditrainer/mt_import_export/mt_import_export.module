<?php

module_load_include('inc', 'mt_import_export', 'mt_import_export_admin_menu');
module_load_include('inc', 'mt_import_export','mt_import_export_forms');

/*
 * $list = array (
    array('aaa', 'bbb', 'ccc', 'dddd'),
    array('123', '456', '789'),
    array('"aaa"', '"bbb"')
);

// Create CSV file
$csv_folder     = BASEURLHERE.'/csv';
$filename 	= "sales";
$CSVFileName    = $csv_folder.'/'.$filename.'.csv';
$FileHandle     = fopen($CSVFileName, 'w') or die("can't open file");

fclose($FileHandle);
		
$fp = fopen($CSVFileName, 'w');

foreach ($csv_fields as $fields) {
	fputcsv($fp, $fields);
}
fclose($fp);

 * 
 */
function mt_import_export_file_download($uri){
    //use build_url and get_download_url($uri) into 
    $files = file_load_multiple(array(), array('uri' => $uri));
  if (count($files)) {
    foreach ($files as $item) {
      // Since some database servers sometimes use a case-insensitive comparison
      // by default, double check that the filename is an exact match.
      if ($item->uri === $uri) {
        $file = $item;
        break;
      }
    }
  }
  if (!isset($file)) {
    return;
  }

  // File was found, and access is granted, return the header
  $headers = file_get_content_headers($file);
  return $headers;
}

function get_date_slash_timestamp(){
    return date('Ymd/Hi');
}

function get_import_export_folder_name($import_export_type){
    switch($import_export_type){
        case 'import':
            $import_folder_name = 'import'.'/'.get_date_slash_timestamp().'/';
            return $import_folder_name;
            break;
        case 'export':
            $export_folder_name = 'export'.'/'.get_date_slash_timestamp().'/';
            return $export_folder_name;
            break;
        case 'backup':
            $backup_folder_name = 'backup'.'/'.get_date_slash_timestamp().'/';
            return $backup_folder_name;
            break;
    }
}



function get_export_file_path($file_name, $export_folder_name){
    $data_folder = get_data_folderpath('mt_import_export');
    $complete_file_path = $data_folder."".$export_folder_name."".$file_name;
    return $complete_file_path;
}
    
function table_export($table_name, $fields_array = false, $condition_array = false) {
    $query = db_select($table_name, 'n');
    
    if($fields_array == false) {
        $query->fields('n');
    } else $query->fields('n', $fields_array);
    
    if ($condition_array == false){
    } else {
       foreach ($condition_array as $key=>$value) {
           $query->condition($key, $value );
       }
    }
        
    $results = $query->execute();
     
    $data_array =  $results->fetchAll(PDO::FETCH_ASSOC);
    
    return $data_array;
}

/* //original function
 * 
function export_csv(&$handle, $fields = array(), $delimiter = ',', $enclosure = '"') {
    $str = '';
    $escape_char = '\\';
    foreach ($fields as $value) {
      if (strpos($value, $delimiter) !== false ||
          strpos($value, $enclosure) !== false ||
          strpos($value, "\n") !== false ||
          strpos($value, "\r") !== false ||
          strpos($value, "\t") !== false ||
          strpos($value, ' ') !== false) {
        $str2 = $enclosure;
        $escaped = 0;
        $len = strlen($value);
        for ($i=0;$i<$len;$i++) {
          if ($value[$i] == $escape_char) {
            $escaped = 1;
          } else if (!$escaped && $value[$i] == $enclosure) {
            $str2 .= $enclosure;
          } else {
            $escaped = 0;
          }
          $str2 .= $value[$i];
        }
        $str2 .= $enclosure;
        $str .= $str2.$delimiter;
      } else {
        $str .= $value.$delimiter;
      }
    }
    $str = substr($str,0,-1);
    $str .= "\n";
    return fwrite($handle, $str);
  }
*/

  function export_to_csv(&$handle, $fields = array(), $delimiter = ',', $enclosure = '"') {
    $str = '';
    $escape_char = '\\';
    
     //add first row column header($key) array to the beginning of the data array
      array_unshift($fields, array_keys($fields[0]));    
    
    
    foreach ($fields as $key=>$value) {
      if (strpos($value, $delimiter) !== false ||
          strpos($value, $enclosure) !== false ||
          strpos($value, "\n") !== false ||
          strpos($value, "\r") !== false ||
          strpos($value, "\t") !== false ||
          strpos($value, ' ') !== false) {
        $str2 = $enclosure;
        $escaped = 0;
        $len = strlen($value);
        for ($i=0;$i<$len;$i++) {
          if ($value[$i] == $escape_char) {
            $escaped = 1;
          } else if (!$escaped && $value[$i] == $enclosure) {
            $str2 .= $enclosure;
          } else {
            $escaped = 0;
          }
          $str2 .= $value[$i];
        }
        $str2 .= $enclosure;
        $str .= $str2.$delimiter;
      } else {
        $str .= $value.$delimiter;
      }
    }
    $str = substr($str,0,-1);
    $str .= "\n";
    return fwrite($handle, $str);
  }
  
  
function table_export_to_csv($table_name, &$file_handle, $fields_array = false, $condition_array = false, $delimiter = ',', $enclosure = '"'){
    
    $data_array = table_export_to_csv($table_name, $fields_array, $condition_array);
    
    $csv = export_to_csv($file_handle, $data_array, $delimiter, $enclosure);
    
    return $csv;
}
 
?>
